[
    {
        "id": "f788a78067227a65",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0dfdf1e914c1f5cc",
        "type": "ui_tab",
        "name": "Aislapol Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dcd6b90204ca17ac",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Aislapol Theme",
                "default": "#4B7930",
                "baseColor": "#009ee0",
                "baseFont": "Lucida Sans Unicode,Lucida Grande,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#009ee0",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#008ac6",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#2dc1ff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#009ee0",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "Lucida Sans Unicode,Lucida Grande,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Aislapol Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6d1bf9e97b19ea27",
        "type": "ui_group",
        "name": "Machine 1",
        "tab": "0dfdf1e914c1f5cc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7a2333ce74658d6e",
        "type": "ui_tab",
        "name": "Details",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0ca931ec6fb88653",
        "type": "ui_group",
        "name": "Machine Details",
        "tab": "7a2333ce74658d6e",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "079730b127182e3f",
        "type": "ui_template",
        "z": "f788a78067227a65",
        "group": "6d1bf9e97b19ea27",
        "name": "",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<style>\n    .card {\n        /* Add rounded corners and shadow to the card */\n        border-radius: 8px;\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n\n        /* Add some padding and margin to the card */\n        padding: 16px;\n        margin: 16px;\n\n        /* Use flexbox to align the contents of the card */\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .machine-name {\n        font-weight: bold;\n        font-style: italic;\n    }\n\n    .card:hover {\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n        cursor: pointer;\n    }\n\n    .card-text p {\n        padding: 0.5rem;\n    }\n\n    .card .led {\n        /* Add a border and some padding to the LED */\n        border: 1px solid rgba(0, 0, 0, 0.877);\n        border-radius: 50%;\n        width: 16px;\n        height: 16px;\n        margin: 8px;\n        padding: 8px;\n        align-self: left;\n\n    }\n\n    .led-container {\n        width: 100%;\n        align-items: left;\n    }\n\n    .card .led.red {\n        /* Make the LED red when the boolean value is true */\n        background-color: rgba(255, 0, 0, 0.7);\n        align-self: left;\n    }\n\n    .card .led.green {\n        /* Make the LED green when the boolean value is false */\n        background-color: rgba(0, 255, 0, 0.7);\n        align-self: left;\n    }\n\n    .card .stats {\n        /* Add some padding and margin to the stats */\n        padding: 8px;\n        margin: 8px;\n\n        /* Use flexbox to align the stats horizontally */\n        display: flex;\n        flex-direction: row;\n        align-items: left;\n    }\n\n    .card .stats .label {\n        /* Add some margin to the labels */\n        margin: 8px;\n\n        /* Align the text to the left */\n        text-align: left;\n    }\n</style>\n\n<div class=\"card\" ng-click=\"send({payload: 1})\">\n    <!-- LED -->\n    <div class=\"led-container\">\n        <div class=\"led\" ng-class=\"{'red':!msg.payload.isRunning, 'green':msg.payload.isRunning}\"></div>\n    </div>\n\n    <!-- Machine stats -->\n    <div class=\"stats\">\n        <div class=\"card-body\">\n            <div class=\"card-text\">\n                <p class=\"machine-name\">{{msg.payload.machineName}}</p>\n                <div></div>\n                <p>Número de ciclos: {{msg.payload.numCycles}}</p>\n                <p>Tiempo mínimo de ciclo: {{msg.payload.minCycleTime}}</p>\n                <p>Tiempo promedio de ciclo: {{msg.payload.avgCycleTime}}</p>\n                <p>Tiempo máximo de ciclo: {{msg.payload.maxCycleTime}}</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 180,
        "wires": [
            [
                "40415dec34029574"
            ]
        ]
    },
    {
        "id": "f7ef1c35dcd02342",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "isRunning = true",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "1c3740081de26468"
            ]
        ]
    },
    {
        "id": "b78a6ec512368a4e",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Machine JSON",
        "func": "var machine = {\n    \"machineName\": \"Machine 1\",\n    \"numCycles\": 10,\n    \"minCycleTime\": 5,\n    \"avgCycleTime\": 10,\n    \"maxCycleTime\": 15,\n    \"isRunning\": true\n};\nmsg.payload=machine\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c698b95e3e138cb9",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "machineName",
        "func": "msg.topic = 'Machine 01 Data';\nglobal.set(\"machineName\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "48b84bb63c3f951c"
            ]
        ]
    },
    {
        "id": "68ef9587cfbb773f",
        "type": "debug",
        "z": "f788a78067227a65",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "48b84bb63c3f951c",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "function 2",
        "func": "msg.topic = \"update\";\nvar data = {\n    'machineName': global.get(\"machineName\") || 'default name',\n    'numCycles': global.get(\"numCycles\") || 10,\n    'minCycleTime': global.get(\"minCycleTime\") || 5,\n    'avgCycleTime': global.get(\"avgCycleTime\") || 10,\n    'maxCycleTime': global.get(\"maxCycleTime\") || 15,\n    'isRunning': global.get(\"maxCycleTime\") || true\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "079730b127182e3f",
                "68ef9587cfbb773f",
                "0ae249a0b685d2f6"
            ]
        ]
    },
    {
        "id": "d31817f54b628238",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "numCycles",
        "func": "msg.topic = 'Machine 01 Data';\nglobal.set(\"numCycles\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "48b84bb63c3f951c"
            ]
        ]
    },
    {
        "id": "6f98be7a3b60bcce",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "minCycleTime",
        "func": "msg.topic = 'Machine 01 Data';\nglobal.set(\"minCycleTime\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "48b84bb63c3f951c"
            ]
        ]
    },
    {
        "id": "a44db6920b33ea87",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "avgCycleTime",
        "func": "msg.topic = 'Machine 01 Data';\nglobal.set(\"avgCycleTime\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 260,
        "wires": [
            [
                "48b84bb63c3f951c"
            ]
        ]
    },
    {
        "id": "cb33bfebc2190795",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "maxCycleTime",
        "func": "msg.topic = 'Machine 01 Data';\nglobal.set(\"maxCycleTime\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 300,
        "wires": [
            [
                "48b84bb63c3f951c"
            ]
        ]
    },
    {
        "id": "1c3740081de26468",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "isRunning",
        "func": "msg.topic = 'Machine 01 Data';\nglobal.set(\"isRunning\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 340,
        "wires": [
            [
                "48b84bb63c3f951c"
            ]
        ]
    },
    {
        "id": "a8d415fc7a23f34d",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "maxCycles = 15",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "15",
        "payloadType": "num",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "cb33bfebc2190795"
            ]
        ]
    },
    {
        "id": "137b224172463602",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "avgCycles = 10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "a44db6920b33ea87"
            ]
        ]
    },
    {
        "id": "215eaa5178796d87",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "minCycles = 5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "6f98be7a3b60bcce"
            ]
        ]
    },
    {
        "id": "e117995517d210f7",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "Cycles = 10",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "d31817f54b628238"
            ]
        ]
    },
    {
        "id": "cb5f18dd2f26190f",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "machineName = \"Promass 16\"",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Promass 16",
        "payloadType": "str",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "c698b95e3e138cb9"
            ]
        ]
    },
    {
        "id": "40415dec34029574",
        "type": "ui_ui_control",
        "z": "f788a78067227a65",
        "name": "",
        "events": "all",
        "x": 940,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "0ae249a0b685d2f6",
        "type": "ui_template",
        "z": "f788a78067227a65",
        "group": "0ca931ec6fb88653",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .main-container {\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n    }\n\n    .left-container {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .card p {\n        margin: 0;\n    }\n\n    .card {\n        /* Add rounded corners and shadow to the card */\n        border-radius: 8px;\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n\n        /* Add some padding and margin to the card */\n        padding: 16px;\n        margin: 16px;\n\n        /* Use flexbox to align the contents of the card */\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .machine-name {\n        font-weight: bold;\n        font-style: italic;\n    }\n\n    .card:hover {\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    }\n\n    .card-text p {\n        padding: 0.5rem;\n    }\n\n    .card .led {\n        /* Add a border and some padding to the LED */\n        border: 1px solid rgba(0, 0, 0, 0.877);\n        border-radius: 50%;\n        width: 16px;\n        height: 16px;\n        margin: 8px;\n        padding: 8px;\n        align-self: left;\n\n    }\n\n    .led-container {\n        width: 100%;\n        align-items: left;\n    }\n\n    .card .led.red {\n        /* Make the LED red when the boolean value is true */\n        background-color: rgba(255, 0, 0, 0.7);\n        align-self: left;\n    }\n\n    .card .led.green {\n        /* Make the LED green when the boolean value is false */\n        background-color: rgba(0, 255, 0, 0.7);\n        align-self: left;\n    }\n\n    .card .stats {\n        /* Add some padding and margin to the stats */\n        padding: 8px;\n        margin: 8px;\n\n        /* Use flexbox to align the stats horizontally */\n        display: flex;\n        flex-direction: row;\n        align-items: left;\n    }\n\n    .card .stats .label {\n        /* Add some margin to the labels */\n        margin: 8px;\n\n        /* Align the text to the left */\n        text-align: left;\n    }\n</style>\n\n<div class=\"main-container\">\n    <div class=\"left-container card-text\">\n        <div class=\"card\">\n            <p>Tipo de matriz: {{}}</p>\n            <p>Código matriz: {{}}</p>\n            <p>Piezas por ciclo: {{}}</p>\n        </div>\n        <div class=\"card\">\n            <p>Número de ciclo: {{}}</p>\n            <p>Tiempo de ciclo: {{}}</p>\n            <p>Tiempo de ciclo anterior: {{}}</p>\n            <p>Inicio: {{}}</p>\n            <p>Término: {{}}</p>\n        </div>\n    </div>\n    <div class=\"card card-text\">\n        <p>Cantidad producida: {{}}</p>\n        <p>Horas produciendo: {{}}</p>\n        <p>Horas detenida: {{}}</p>\n        <p>Tiempo de ciclo promedio acumulado: {{}}</p>\n        <p>Tiempo de ciclo mínimo: {{}}</p>\n        <p>Tiempo de ciclo máximo: {{}}</p>\n        <p>% de utilización: {{}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 100,
        "wires": [
            []
        ]
    }
]
[
    {
        "id": "f788a78067227a65",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0dfdf1e914c1f5cc",
        "type": "ui_tab",
        "name": "Aislapol Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dcd6b90204ca17ac",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Aislapol Theme",
                "default": "#4B7930",
                "baseColor": "#009ee0",
                "baseFont": "Lucida Sans Unicode,Lucida Grande,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Aislapol Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 2,
                "py": 2
            }
        }
    },
    {
        "id": "6d1bf9e97b19ea27",
        "type": "ui_group",
        "name": "Máquina 15",
        "tab": "0dfdf1e914c1f5cc",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7a2333ce74658d6e",
        "type": "ui_tab",
        "name": "Detalles Máquina 15",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8bda35d4e5cabfb0",
        "type": "ui_group",
        "name": "Máquina 16",
        "tab": "0dfdf1e914c1f5cc",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cacf42a215e27709",
        "type": "ui_tab",
        "name": "Testing",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "371b2826480241e5",
        "type": "ui_group",
        "name": "Testing Group",
        "tab": "cacf42a215e27709",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c29eb2fc36d0810a",
        "type": "ui_group",
        "name": "Graficos de control",
        "tab": "7a2333ce74658d6e",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "df6503af5db3fa0d",
        "type": "ui_group",
        "name": "Inicio",
        "tab": "7a2333ce74658d6e",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e4ec8c4ca75ccf70",
        "type": "ui_group",
        "name": "Válvulas de Presión",
        "tab": "7a2333ce74658d6e",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": true,
        "className": ""
    },
    {
        "id": "26b6a96fe6e7eef6",
        "type": "ui_group",
        "name": "LED",
        "tab": "7a2333ce74658d6e",
        "order": 4,
        "disp": false,
        "width": "2",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b52e155a183a995",
        "type": "ui_group",
        "name": "Tiempos de Ciclo Máquina 15",
        "tab": "0dfdf1e914c1f5cc",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7532c183070e251e",
        "type": "ui_spacer",
        "z": "f788a78067227a65",
        "name": "spacer",
        "group": "6b52e155a183a995",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "20ae1e52d1eef983",
        "type": "postgreSQLConfig",
        "name": "myuser@timescale:5432/iot",
        "host": "timescale",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "iot",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "myuser",
        "userFieldType": "str",
        "password": "???",
        "passwordFieldType": "str"
    },
    {
        "id": "a1fb71ced63ef518",
        "type": "postgreSQLConfig",
        "name": "dbAislapol",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "aislapolDB",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "aislapol1234",
        "passwordFieldType": "str"
    },
    {
        "id": "aaaff17d2a6ea9c9",
        "type": "OPCUA-IIoT-Connector",
        "discoveryUrl": "",
        "endpoint": "opc.tcp://192.168.1.3:4840",
        "endpointMustExist": false,
        "keepSessionAlive": true,
        "loginEnabled": true,
        "name": "Promass (15) SERVER",
        "showErrors": false,
        "securityPolicy": "None",
        "securityMode": "None",
        "individualCerts": false,
        "publicCertificateFile": "",
        "privateKeyFile": "",
        "defaultSecureTokenLifetime": "",
        "autoSelectRightEndpoint": false,
        "strategyMaxRetry": "",
        "strategyInitialDelay": "",
        "strategyMaxDelay": "",
        "strategyRandomisationFactor": "",
        "requestedSessionTimeout": "",
        "connectionStartDelay": "",
        "reconnectDelay": "",
        "maxBadSessionRequests": "10"
    },
    {
        "id": "b3927325.2eb6c",
        "type": "OPCUA-IIoT-Connector",
        "discoveryUrl": "",
        "endpoint": "opc.tcp://localhost:55388/",
        "endpointMustExist": false,
        "keepSessionAlive": true,
        "loginEnabled": false,
        "name": "LOCAL EVENT CLIENT",
        "showErrors": true,
        "securityPolicy": "None",
        "securityMode": "None",
        "publicCertificateFile": "",
        "privateKeyFile": "",
        "defaultSecureTokenLifetime": "",
        "autoSelectRightEndpoint": false,
        "strategyMaxRetry": "",
        "strategyInitialDelay": "",
        "strategyMaxDelay": "",
        "strategyRandomisationFactor": "",
        "requestedSessionTimeout": "",
        "connectionStartDelay": "",
        "reconnectDelay": "",
        "maxBadSessionRequests": "10"
    },
    {
        "id": "41620427fabb1e6d",
        "type": "ui_ui_control",
        "z": "f788a78067227a65",
        "name": "",
        "events": "all",
        "x": 2100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8dcfe0fe921ca3b5",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Machine 15 JSON Formating",
        "func": "function formatDuration(duration) {\n    var hours = Math.floor(duration / 3600);\n    var minutes = Math.floor((duration - (hours * 3600)) / 60);\n    var seconds = duration - (hours * 3600) - (minutes * 60);\n\n    if (hours < 10) { hours = \"0\" + hours; }\n    if (minutes < 10) { minutes = \"0\" + minutes; }\n    if (seconds < 10) { seconds = \"0\" + seconds; }\n    seconds=Math.floor(seconds);\n\n    return hours + ':' + minutes + ':' + seconds;\n}\nfunction round(value, decimals) {\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\n//Setting latest values\n//LifeCycles[0]\nvar numCycles = msg.payload.value.results[0].value.value;\nnumCycles = numCycles - global.get(\"todayCyclesMac15\");\n//LastRecipe[1]\nvar recipe = msg.payload.value.results[1].value.value;\n\n//Running[3]\nvar running = msg.payload.value.results[3].value.value;\n\n//LastCycleTime[4]\nvar lastCycleTime = msg.payload.value.results[4].value.value / 1000;\nvar lastCycleTimePost = lastCycleTime;\n//LastCycleTimePost for post to Database.\nlastCycleTimePost = round(lastCycleTimePost, 2)\nlastCycleTime = Math.floor(lastCycleTime);\nvar warning = false;\n\n//Checking for warning state\nif (running !== global.get(\"bLastStateMac15\")) {\n    global.set(\"bLastStateMac15\", running);\n    global.set(\"dLastChangedTimeMac15Prev\", global.get(\"dLastChangedTimeMac15\"));\n    global.set(\"dLastChangedTimeMac15\", new Date().getTime());\n} else {\n    let currentTime = new Date().getTime();\n    if (running === false && (currentTime - global.get(\"dLastChangedTimeMac15\") > 7200000)) {\n        warning = true;\n    }\n};\n\n\nvar minCycleTime = \"N/A\";\nvar maxCycleTime = \"N/A\";\n\n\n// set min time\nif (global.get(\"minCycleTimeMac15\")) {\n    minCycleTime = Math.min(lastCycleTime, global.get(\"minCycleTimeMac15\"));\n    global.set(\"minCycleTimeMac15\", minCycleTime);\n} else {\n    global.set(\"minCycleTimeMac15\", lastCycleTime);\n};\n//set max time\nif (global.get(\"maxCycleTimeMac15\")) {\n    maxCycleTime = Math.max(lastCycleTime, global.get(\"maxCycleTimeMac15\"));\n    global.set(\"maxCycleTimeMac15\", maxCycleTime);\n} else {\n    global.set(\"maxCycleTimeMac15\", lastCycleTime);\n};\n//set production times\nif(running===true){\n    var timeProducing = global.get(\"statusTimeProxyMac15\");\n    var timeStopped = global.get(\"totalDurationFalseMac15\");\n}else{\n    var timeProducing = global.get(\"totalDurationTrueMac15\");\n    var timeStopped = global.get(\"statusTimeProxyMac15\");\n}\n\nvar perUtilization = timeProducing / (timeProducing + timeStopped);\nperUtilization = round(perUtilization * 100, 1);\ntimeProducing = formatDuration(timeProducing);\ntimeStopped = formatDuration(timeStopped);\n\nvar machine = {\n    \"recipe\": recipe,\n    \"numCycles\": numCycles,\n    \"minCycleTime\": minCycleTime,\n    \"maxCycleTime\": maxCycleTime,\n    \"isRunning\": running,\n    \"warning\": warning,\n    \"timeProducing\": timeProducing,\n    \"timeStopped\": timeStopped,\n    \"perUtilization\": perUtilization,\n    \"lastCycleTime\": lastCycleTimePost\n};\nmsg.payload = machine;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 340,
        "wires": [
            [
                "01da6e515dc345cf",
                "3ea352ee56317e8d"
            ]
        ]
    },
    {
        "id": "0c8551918bfe32e2",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Machine 15 JSON Formating",
        "func": "var lastCycleTime = msg.payload.value.value.value / 1000;\nif(!global.get(\"lastCycleTimeMac15\")){\n    global.set(\"lastCycleTimeMac15\",lastCycleTime);\n}else{\n    if (global.get(\"lastCycleTimeMac15\") === lastCycleTime){\n        msg.payload=\"\";\n        msg.topic=\"\";\n        return msg;\n    }\n}\n\nglobal.set(\"lastCycleTimeMac15\", lastCycleTime);\nmsg.payload=lastCycleTime;\nmsg.topic=\"Tiempo de ciclo\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 460,
        "wires": [
            [
                "ebcaa41dce7ebc67",
                "9af8176f55e26f0e"
            ]
        ]
    },
    {
        "id": "ebcaa41dce7ebc67",
        "type": "ui_chart",
        "z": "f788a78067227a65",
        "name": "",
        "group": "6b52e155a183a995",
        "order": 1,
        "width": "12",
        "height": "9",
        "label": "Tiempos de Ciclo Máquina 15",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "80",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f6f54112.c9ed4",
        "type": "catch",
        "z": "f788a78067227a65",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "3b51ffbd.c887f"
            ]
        ]
    },
    {
        "id": "3b51ffbd.c887f",
        "type": "debug",
        "z": "f788a78067227a65",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "ebe7bf76279201e2",
        "type": "ui_gauge",
        "z": "f788a78067227a65",
        "name": "",
        "group": "e4ec8c4ca75ccf70",
        "order": 4,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Vacío",
        "label": "bar",
        "format": "{{value | number:1}}",
        "min": "-0.5",
        "max": "1",
        "colors": [
            "#e6e600",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "0",
        "seg2": "0.9",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 740,
        "wires": []
    },
    {
        "id": "1bd9207bb04c60e1",
        "type": "ui_gauge",
        "z": "f788a78067227a65",
        "name": "",
        "group": "e4ec8c4ca75ccf70",
        "order": 5,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Desmoldeo",
        "label": "bar",
        "format": "{{value}}",
        "min": "1",
        "max": "2",
        "colors": [
            "#e6e600",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "1",
        "seg2": "1.6",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 820,
        "wires": []
    },
    {
        "id": "a2849f5fd82c1805",
        "type": "ui_chart",
        "z": "f788a78067227a65",
        "name": "",
        "group": "c29eb2fc36d0810a",
        "order": 2,
        "width": "9",
        "height": "5",
        "label": "Temperatura",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "7e499c4d18dc65ee",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Temperature",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "f41e39ca9dd90c40"
            ]
        ]
    },
    {
        "id": "f41e39ca9dd90c40",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Demo Temperatura",
        "func": "function randn_bm() {\n    let u = 0, v = 0;\n    while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n    while (v === 0) v = Math.random();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) return randn_bm() // resample between 0 and 1\n    return num\n}\n\nvar newMsg = { payload: 50, topic: \"Límite de control inferior\" };\nvar newMsg2 = { payload: 150, topic: \"Límite de control superior\" };\n\nvar randTemp = randn_bm()*100+20;\nrandTemp = Math.floor(randTemp);\nmsg.payload=randTemp;\nreturn [msg, newMsg, newMsg2];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "a2849f5fd82c1805"
            ],
            [
                "a2849f5fd82c1805"
            ],
            [
                "a2849f5fd82c1805"
            ]
        ]
    },
    {
        "id": "65cbdf7aa3bc734e",
        "type": "inject",
        "z": "f788a78067227a65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 780,
        "wires": [
            [
                "9f864b7f1947d724"
            ]
        ]
    },
    {
        "id": "6f9c72ab1239b008",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Notificar Correo",
        "func": "var bWarning = msg.payload[\"warning\"];\nvar currentTime = new Date().getTime();\nvar message = \"\";\nvar content = \"\";\n\nif (!(global.get(\"dLastSentMailMac15\"))){\n    global.set(\"dLastSentMailMac15\", global.get(\"dLastChangedTimeMac15\"));\n}\n\nif (bWarning === true && (currentTime - global.get(\"dLastChangedTimeMac15\") > 7200000) && (currentTime - global.get(\"dLastSentMailMac15\") > 7200000)){\n    var bSendMail = true;\n    global.set(\"dLastSentMailMac15\", currentTime);\n}else{\n    var bSendMail = false;\n}\n\nif(bSendMail===true){\n    message = \"Máquina 15 no ha funcionado por 2 horas. Esta es una notificación, no necesita responder.\";\n    content = \"Notificación - Aislapol Dashboard\";\n    msg.payload = message;\n    msg.topic = content;\n    msg.bSend = bSendMail;\n    return msg;\n}else{\n    message = \"Máquina 15 lleva menos de 2 horas continuas sin funcionar.\";\n    content = \"Notificación - Aislapol Dashboard\";\n    msg.payload = message;\n    msg.topic = content;\n    msg.bSend = bSendMail;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 360,
        "wires": [
            [
                "0a6035fd3041b079"
            ]
        ]
    },
    {
        "id": "adbc765917d71f4b",
        "type": "switch",
        "z": "f788a78067227a65",
        "name": "",
        "property": "bSend",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 360,
        "wires": [
            [
                "a0176ace469c1bb9"
            ],
            [
                "6e638d8907d9567c"
            ]
        ]
    },
    {
        "id": "6e638d8907d9567c",
        "type": "delay",
        "z": "f788a78067227a65",
        "name": "",
        "pauseType": "rate",
        "timeout": "15",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1980,
        "y": 400,
        "wires": [
            [
                "c3a48b8715ec94a2"
            ]
        ]
    },
    {
        "id": "c3a48b8715ec94a2",
        "type": "debug",
        "z": "f788a78067227a65",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 400,
        "wires": []
    },
    {
        "id": "c2a6a82cfcfa2d9c",
        "type": "ui_button",
        "z": "f788a78067227a65",
        "name": "",
        "group": "df6503af5db3fa0d",
        "order": 1,
        "width": "17",
        "height": "1",
        "passthru": false,
        "label": "Volver al Inicio",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1880,
        "y": 60,
        "wires": [
            [
                "41620427fabb1e6d"
            ]
        ]
    },
    {
        "id": "9af8176f55e26f0e",
        "type": "debug",
        "z": "f788a78067227a65",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 520,
        "wires": []
    },
    {
        "id": "01da6e515dc345cf",
        "type": "delay",
        "z": "f788a78067227a65",
        "name": "",
        "pauseType": "rate",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 400,
        "wires": [
            [
                "a93e3a27cbf71aaf"
            ]
        ]
    },
    {
        "id": "111e0f018fe505f4",
        "type": "ui_gauge",
        "z": "f788a78067227a65",
        "name": "",
        "group": "e4ec8c4ca75ccf70",
        "order": 5,
        "width": "4",
        "height": "4",
        "gtype": "gage",
        "title": "Aire de Llenado",
        "label": "bar",
        "format": "{{value}}",
        "min": "1",
        "max": "2",
        "colors": [
            "#e6e600",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "1",
        "seg2": "1.6",
        "diff": false,
        "className": "",
        "x": 600,
        "y": 780,
        "wires": []
    },
    {
        "id": "6f43828525797a13",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Reset Global Values",
        "func": "context.global.set(\"todayCyclesMac15\", global.get(\"globalCyclesMac15\"));\ncontext.global.set(\"totalDurationTrueMac15\", 0);\ncontext.global.set(\"totalDurationFalseMac15\", 0);\ncontext.global.set(\"statusTimeProxyMac15\", 0);\ncontext.global.set(\"dLastChangedTimeMac15\", new Date().getTime());\ncontext.global.set(\"dLastChangedTimeMac15Prev\", new Date().getTime());\ncontext.global.set(\"dLastSentMailMac15\", new Date().getTime());\ncontext.global.set(\"maxCycleTimeMac15\", \"N/A\");\ncontext.global.set(\"minCycleTimeMac15\", \"N/A\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "874d55c6f8006363",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Set Global Cycles",
        "func": "global.set(\"globalCyclesMac15\", msg.payload.value.results[0].value.value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 160,
        "wires": [
            [
                "a99cb87c02f0fc0c"
            ]
        ]
    },
    {
        "id": "1ea9e654b8e8df62",
        "type": "delay",
        "z": "f788a78067227a65",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1490,
        "y": 280,
        "wires": [
            [
                "6d14cc8fe37e77ba"
            ]
        ]
    },
    {
        "id": "6d14cc8fe37e77ba",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "isRunning",
        "func": "if (msg.payload[\"isRunning\"]){\n    msg.payload = msg.payload[\"isRunning\"];\n}\nelse{\n    msg.payload=false\n}\nmsg.topic=\"Running Status\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 280,
        "wires": [
            [
                "e4cc40628d5b4f87",
                "643c7e5c64d75b7c",
                "f4fd67fabed421fc"
            ]
        ]
    },
    {
        "id": "e4cc40628d5b4f87",
        "type": "switch",
        "z": "f788a78067227a65",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1830,
        "y": 280,
        "wires": [
            [
                "78701a193601b1de"
            ],
            [
                "432e25fa3f0a2d9d"
            ],
            [
                "432e25fa3f0a2d9d"
            ]
        ]
    },
    {
        "id": "78701a193601b1de",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "isTrue",
        "func": "global.set(\"statusTimeProxyMac15\", global.get(\"statusTimeProxyMac15\")+1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "432e25fa3f0a2d9d",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "isFalse",
        "func": "global.set(\"statusTimeProxyMac15\", global.get(\"statusTimeProxyMac15\")+1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9e86f08a5f8f9866",
        "type": "comment",
        "z": "f788a78067227a65",
        "name": "Demo de válvulas y gráficos de control",
        "info": "",
        "x": 190,
        "y": 620,
        "wires": []
    },
    {
        "id": "a93e3a27cbf71aaf",
        "type": "debug",
        "z": "f788a78067227a65",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 400,
        "wires": []
    },
    {
        "id": "0a6035fd3041b079",
        "type": "delay",
        "z": "f788a78067227a65",
        "name": "",
        "pauseType": "rate",
        "timeout": "15",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1640,
        "y": 360,
        "wires": [
            [
                "adbc765917d71f4b"
            ]
        ]
    },
    {
        "id": "3ea352ee56317e8d",
        "type": "link out",
        "z": "f788a78067227a65",
        "name": "Formato Máquina 15",
        "mode": "link",
        "links": [
            "ecc4310e14c5a4c0"
        ],
        "x": 905,
        "y": 340,
        "wires": []
    },
    {
        "id": "ecc4310e14c5a4c0",
        "type": "link in",
        "z": "f788a78067227a65",
        "name": "Formato Máquina 15",
        "links": [
            "3ea352ee56317e8d"
        ],
        "x": 1315,
        "y": 120,
        "wires": [
            [
                "1ea9e654b8e8df62",
                "6f9c72ab1239b008",
                "10b690ec7a43c61f"
            ]
        ]
    },
    {
        "id": "9f864b7f1947d724",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Demo Presiones",
        "func": "function randn_bm() {\n    let u = 0, v = 0;\n    while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n    while (v === 0) v = Math.random();\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) return randn_bm() // resample between 0 and 1\n    return num\n}\nfunction round(value, decimals) {\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nvar randPress = randn_bm() * 1.5 - 0.5;\nrandPress = round(randPress, 1)\nmsg.payload = randPress;\n\n\nvar randPress2 = randn_bm() + 1.0;\nrandPress2 = round(randPress2, 1);\nvar msg2 = { payload: randPress2};\n\n\nvar randPress2 = randn_bm() + 1.0;\nrandPress2 = round(randPress2, 1);\nvar msg3 = { payload: randPress2 };\n\n\nreturn [msg, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 780,
        "wires": [
            [
                "ebe7bf76279201e2"
            ],
            [
                "111e0f018fe505f4"
            ],
            [
                "1bd9207bb04c60e1"
            ]
        ]
    },
    {
        "id": "f4fd67fabed421fc",
        "type": "rbe",
        "z": "f788a78067227a65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1990,
        "y": 220,
        "wires": [
            [
                "9a41d879560d4f39"
            ]
        ]
    },
    {
        "id": "9a41d879560d4f39",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "Proper Time Set",
        "func": "var runningStatus = msg.payload;\nvar currentTime = new Date().getTime();\ncurrentTime = currentTime/1000;\nif (runningStatus===true){\n    global.set(\"totalDurationFalseMac15\", global.get(\"totalDurationFalseMac15\") + currentTime - global.get(\"dLastChangedTimeMac15Prev\")/1000);\n    global.set(\"statusTimeProxyMac15\", global.get(\"totalDurationTrueMac15\"));\n}else{\n    global.set(\"totalDurationTrueMac15\", global.get(\"totalDurationTrueMac15\") + currentTime - global.get(\"dLastChangedTimeMac15Prev\")/1000);\n    global.set(\"statusTimeProxyMac15\", global.get(\"totalDurationFalseMac15\"));\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c487ed6c0c360f55",
        "type": "comment",
        "z": "f788a78067227a65",
        "name": "Último tiempo de ciclo",
        "info": "Último tiempo de ciclo obtenido mediante\nun cliente con el método \"Listen\",\nse actualiza sólo cuando el valor de la\nvariable cambia en la máquina, vale decir,\ncuando un ciclo nuevo termina.",
        "x": 220,
        "y": 420,
        "wires": []
    },
    {
        "id": "6d3cb0e8816d4522",
        "type": "comment",
        "z": "f788a78067227a65",
        "name": "Datos de Máquina en tiempo real",
        "info": "Todos los datos que se necesiten en tiempo real se obtiene acá, a través del cliente OPC UA\nse puede configurar para que se soliciten cada x cantidad de milisegundos,\nactualmente 1000, se puede reducir de ser necesario. Cualquier valor bajo 250ms\npodría afectar considerablemente el rendimiento.\n",
        "x": 250,
        "y": 280,
        "wires": []
    },
    {
        "id": "20a4e0fe08692a1f",
        "type": "comment",
        "z": "f788a78067227a65",
        "name": "Inicialización de Valores",
        "info": "Todas las variables globales que necesitan ser reiniciadas a las 7AM todos los días, se reinician en esta sección.\n\nUn timer se preocupa de que se realice al tiempo exacto solicitado, se puede ejecutar manualmente de ser necesario.",
        "x": 720,
        "y": 80,
        "wires": []
    },
    {
        "id": "7f1b84effcdba27f",
        "type": "comment",
        "z": "f788a78067227a65",
        "name": "Control para conexión entre pestañas",
        "info": "Control que maneja los \"links\" de cada\nwidget y te lleva a las pestañas de elección",
        "x": 2190,
        "y": 60,
        "wires": []
    },
    {
        "id": "7204f9535b654911",
        "type": "comment",
        "z": "f788a78067227a65",
        "name": "Carta de datos de Máquina",
        "info": "El widget principal con un resumen de datos\nde utilidad acerca de la máquina en cuestión.\nlos datos se actualizan con la frecuencia que se\nsoliciten desde el cliente OPC UA.",
        "x": 1640,
        "y": 80,
        "wires": []
    },
    {
        "id": "10b690ec7a43c61f",
        "type": "function",
        "z": "f788a78067227a65",
        "name": "DB INSERT Formatting",
        "func": "var data = msg.payload;\nif (data[\"numCycles\"]!==null){\n    msg.machine_name = 'Máquina 15';\n    msg.cycle = data[\"numCycles\"];\n    msg.cycle_time = data[\"lastCycleTime\"];\n    msg.recipe_name = data[\"recipe\"];\n    msg.post=true;\n}\nelse{\n    msg.post=false\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 580,
        "wires": [
            [
                "8fad20c2952a0f89"
            ]
        ]
    },
    {
        "id": "82e8a27928857d05",
        "type": "rbe",
        "z": "f788a78067227a65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "cycle",
        "topi": "topic",
        "x": 1870,
        "y": 580,
        "wires": [
            [
                "8d39eb2f8d2950d1"
            ]
        ]
    },
    {
        "id": "64a82e4147f4fd45",
        "type": "debug",
        "z": "f788a78067227a65",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 580,
        "wires": []
    },
    {
        "id": "8fad20c2952a0f89",
        "type": "switch",
        "z": "f788a78067227a65",
        "name": "Data is defined",
        "property": "post",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1720,
        "y": 580,
        "wires": [
            [
                "82e8a27928857d05"
            ],
            []
        ]
    },
    {
        "id": "a0176ace469c1bb9",
        "type": "e-mail",
        "z": "f788a78067227a65",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "david.sanmartin@styropek.com",
        "dname": "",
        "x": 2030,
        "y": 360,
        "wires": []
    },
    {
        "id": "8d39eb2f8d2950d1",
        "type": "postgresql",
        "z": "f788a78067227a65",
        "name": "Post Last Cycle",
        "query": "INSERT INTO aislapol_table (machine_name, cycle, cycle_time, recipe_name)\nVALUES ('{{{ msg.machine_name }}}', {{{ msg.cycle }}}, {{{ msg.cycle_time }}}, '{{{ msg.recipe_name }}}');",
        "postgreSQLConfig": "a1fb71ced63ef518",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 2060,
        "y": 580,
        "wires": [
            [
                "64a82e4147f4fd45"
            ]
        ]
    },
    {
        "id": "7813d7832b20707f",
        "type": "OPCUA-IIoT-Inject",
        "z": "f788a78067227a65",
        "injectType": "read",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "startDelay": "",
        "name": "",
        "addressSpaceItems": [
            {
                "name": "LifeCycles",
                "nodeId": "ns=6;s=::OpcUA_IF:life_cycles",
                "datatypeName": ""
            },
            {
                "name": "LastRecipe",
                "nodeId": "ns=6;s=::OpcUA_IF:last_recipe",
                "datatypeName": ""
            },
            {
                "name": "CycleTime",
                "nodeId": "ns=6;s=::OpcUA_IF:mac_status.actual_cycle_time",
                "datatypeName": ""
            },
            {
                "name": "Running",
                "nodeId": "ns=6;s=::OpcUA_IF:mac_status.running",
                "datatypeName": ""
            },
            {
                "name": "LastCycleTime",
                "nodeId": "ns=6;s=::OpcUA_IF:mac_status.last_cycle_time",
                "datatypeName": ""
            }
        ],
        "x": 190,
        "y": 340,
        "wires": [
            [
                "a067caa19d25d48d"
            ]
        ]
    },
    {
        "id": "51d7fa0e28d66e16",
        "type": "OPCUA-IIoT-Inject",
        "z": "f788a78067227a65",
        "injectType": "listen",
        "payload": "{ \"interval\": 1500, \"queueSize\": 10 }",
        "payloadType": "json",
        "topic": "",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "startDelay": "",
        "name": "Listen Machine 15",
        "addressSpaceItems": [
            {
                "name": "LastCycleTime",
                "nodeId": "ns=6;s=::OpcUA_IF:mac_status.last_cycle_time",
                "datatypeName": ""
            }
        ],
        "x": 220,
        "y": 460,
        "wires": [
            [
                "3e734995f3a4807c"
            ]
        ]
    },
    {
        "id": "3e734995f3a4807c",
        "type": "OPCUA-IIoT-Listener",
        "z": "f788a78067227a65",
        "connector": "aaaff17d2a6ea9c9",
        "action": "subscribe",
        "queueSize": 10,
        "name": "",
        "topic": "",
        "justValue": true,
        "useGroupItems": false,
        "showStatusActivities": false,
        "showErrors": false,
        "x": 380,
        "y": 460,
        "wires": [
            [
                "8e87cb09fb42b6b2"
            ]
        ]
    },
    {
        "id": "a067caa19d25d48d",
        "type": "OPCUA-IIoT-Read",
        "z": "f788a78067227a65",
        "attributeId": "13",
        "maxAge": 1,
        "depth": 1,
        "connector": "aaaff17d2a6ea9c9",
        "name": "Read Value",
        "justValue": false,
        "showStatusActivities": false,
        "showErrors": false,
        "parseStrings": false,
        "historyDays": "",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "039f8eb9e82ae5cf"
            ]
        ]
    },
    {
        "id": "039f8eb9e82ae5cf",
        "type": "OPCUA-IIoT-Response",
        "z": "f788a78067227a65",
        "name": "",
        "compressStructure": false,
        "showStatusActivities": false,
        "showErrors": false,
        "activateUnsetFilter": false,
        "activateFilters": false,
        "negateFilter": false,
        "filters": [],
        "x": 470,
        "y": 340,
        "wires": [
            [
                "8dcfe0fe921ca3b5",
                "874d55c6f8006363"
            ]
        ]
    },
    {
        "id": "8e87cb09fb42b6b2",
        "type": "OPCUA-IIoT-Response",
        "z": "f788a78067227a65",
        "name": "",
        "compressStructure": true,
        "showStatusActivities": false,
        "showErrors": false,
        "activateUnsetFilter": false,
        "activateFilters": false,
        "negateFilter": false,
        "filters": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "0c8551918bfe32e2"
            ]
        ]
    },
    {
        "id": "643c7e5c64d75b7c",
        "type": "ui_led",
        "z": "f788a78067227a65",
        "order": 2,
        "group": "df6503af5db3fa0d",
        "width": "3",
        "height": "1",
        "label": "Estado:",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Is Running LED",
        "x": 1880,
        "y": 160,
        "wires": []
    },
    {
        "id": "a99cb87c02f0fc0c",
        "type": "cronplus",
        "z": "f788a78067227a65",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 7 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 880,
        "y": 160,
        "wires": [
            [
                "6f43828525797a13"
            ]
        ]
    }
]